{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/lib/api/client.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosError } from \"axios\";\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8080\";\n\nexport class ApiClient {\n  private client: AxiosInstance;\n\n  constructor() {\n    this.client = axios.create({\n      baseURL: API_URL,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    // Request interceptor to add auth token\n    this.client.interceptors.request.use(\n      (config) => {\n        // Get token from localStorage\n        if (typeof window !== \"undefined\") {\n          const token = localStorage.getItem(\"auth_token\");\n          const apiKey = localStorage.getItem(\"api_key\");\n\n          if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n          } else if (apiKey) {\n            config.headers[\"X-API-Key\"] = apiKey;\n          }\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    // Response interceptor for error handling\n    this.client.interceptors.response.use(\n      (response) => response,\n      (error: AxiosError) => {\n        if (error.response?.status === 401) {\n          // Clear auth and redirect to login\n          if (typeof window !== \"undefined\") {\n            localStorage.removeItem(\"auth_token\");\n            localStorage.removeItem(\"api_key\");\n            window.location.href = \"/login\";\n          }\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  get axios() {\n    return this.client;\n  }\n}\n\nexport const apiClient = new ApiClient();\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM,UAAU,6DAAmC;AAE5C,MAAM;IACH,OAAsB;IAE9B,aAAc;QACZ,IAAI,CAAC,MAAM,GAAG,gJAAK,CAAC,MAAM,CAAC;YACzB,SAAS;YACT,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,wCAAwC;QACxC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAClC,CAAC;YACC,8BAA8B;YAC9B;;YAUA,OAAO;QACT,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;QAG5B,0CAA0C;QAC1C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CACnC,CAAC,WAAa,UACd,CAAC;YACC,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;gBAClC,mCAAmC;gBACnC;;YAKF;YACA,OAAO,QAAQ,MAAM,CAAC;QACxB;IAEJ;IAEA,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,MAAM;IACpB;AACF;AAEO,MAAM,YAAY,IAAI","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/lib/api/auth.ts"],"sourcesContent":["import { apiClient } from \"./client\";\nimport type { UserCreate, UserLogin, UserResponse, Token } from \"@/types/api\";\n\nexport const authApi = {\n  register: async (data: UserCreate): Promise<UserResponse> => {\n    const response = await apiClient.axios.post<UserResponse>(\"/auth/register\", data);\n    return response.data;\n  },\n\n  login: async (data: UserLogin): Promise<Token> => {\n    const response = await apiClient.axios.post<Token>(\"/auth/login\", data);\n    return response.data;\n  },\n\n  me: async (): Promise<UserResponse> => {\n    const response = await apiClient.axios.get<UserResponse>(\"/auth/me\");\n    return response.data;\n  },\n};\n"],"names":[],"mappings":";;;;AAAA;;AAGO,MAAM,UAAU;IACrB,UAAU,OAAO;QACf,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,IAAI,CAAe,kBAAkB;QAC5E,OAAO,SAAS,IAAI;IACtB;IAEA,OAAO,OAAO;QACZ,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,IAAI,CAAQ,eAAe;QAClE,OAAO,SAAS,IAAI;IACtB;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,GAAG,CAAe;QACzD,OAAO,SAAS,IAAI;IACtB;AACF","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/lib/api/apikeys.ts"],"sourcesContent":["import { apiClient } from \"./client\";\nimport type { APIKeyCreate, APIKeyResponse, APIKeyInfo } from \"@/types/api\";\n\nexport const apiKeysApi = {\n  list: async (): Promise<APIKeyInfo[]> => {\n    const response = await apiClient.axios.get<APIKeyInfo[]>(\"/api-keys/\");\n    return response.data;\n  },\n\n  create: async (data: APIKeyCreate): Promise<APIKeyResponse> => {\n    const response = await apiClient.axios.post<APIKeyResponse>(\"/api-keys/\", data);\n    return response.data;\n  },\n\n  revoke: async (keyId: string): Promise<void> => {\n    await apiClient.axios.delete(`/api-keys/${keyId}`);\n  },\n};\n"],"names":[],"mappings":";;;;AAAA;;AAGO,MAAM,aAAa;IACxB,MAAM;QACJ,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,GAAG,CAAe;QACzD,OAAO,SAAS,IAAI;IACtB;IAEA,QAAQ,OAAO;QACb,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,IAAI,CAAiB,cAAc;QAC1E,OAAO,SAAS,IAAI;IACtB;IAEA,QAAQ,OAAO;QACb,MAAM,iIAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,OAAO;IACnD;AACF","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/lib/api/jobs.ts"],"sourcesContent":["import { apiClient } from \"./client\";\nimport type {\n  JobCreatedResponse,\n  JobStatusResponse,\n  JobResultResponse,\n  JobPagesResponse,\n  JobsListParams,\n  SearchParams,\n  ConvertRequest,\n  UploadRequest,\n} from \"@/types/api\";\n\nexport const jobsApi = {\n  upload: async (data: UploadRequest): Promise<JobCreatedResponse> => {\n    const formData = new FormData();\n    formData.append(\"file\", data.file);\n    if (data.name) {\n      formData.append(\"name\", data.name);\n    }\n\n    const response = await apiClient.axios.post<JobCreatedResponse>(\"/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    return response.data;\n  },\n\n  convert: async (data: ConvertRequest, authHeader?: string): Promise<JobCreatedResponse> => {\n    const formData = new FormData();\n    formData.append(\"source_type\", data.source_type);\n\n    if (data.source) {\n      formData.append(\"source\", data.source);\n    }\n\n    if (data.file) {\n      formData.append(\"file\", data.file);\n    }\n\n    if (data.name) {\n      formData.append(\"name\", data.name);\n    }\n\n    const headers: Record<string, string> = {\n      \"Content-Type\": \"multipart/form-data\",\n    };\n\n    if (authHeader) {\n      headers.Authorization = authHeader;\n    }\n\n    const response = await apiClient.axios.post<JobCreatedResponse>(\"/convert\", formData, {\n      headers,\n    });\n    return response.data;\n  },\n\n  getStatus: async (jobId: string): Promise<JobStatusResponse> => {\n    const response = await apiClient.axios.get<JobStatusResponse>(`/jobs/${jobId}`);\n    return response.data;\n  },\n\n  getResult: async (jobId: string): Promise<JobResultResponse> => {\n    const response = await apiClient.axios.get<JobResultResponse>(`/jobs/${jobId}/result`);\n    return response.data;\n  },\n\n  getPages: async (jobId: string): Promise<JobPagesResponse> => {\n    const response = await apiClient.axios.get<JobPagesResponse>(`/jobs/${jobId}/pages`);\n    return response.data;\n  },\n\n  getPageStatus: async (jobId: string, pageNumber: number): Promise<JobStatusResponse> => {\n    const response = await apiClient.axios.get<JobStatusResponse>(\n      `/jobs/${jobId}/pages/${pageNumber}/status`\n    );\n    return response.data;\n  },\n\n  getPageResult: async (jobId: string, pageNumber: number): Promise<JobResultResponse> => {\n    const response = await apiClient.axios.get<JobResultResponse>(\n      `/jobs/${jobId}/pages/${pageNumber}/result`\n    );\n    return response.data;\n  },\n\n  list: async (params?: JobsListParams): Promise<JobStatusResponse[]> => {\n    const response = await apiClient.axios.get<JobStatusResponse[]>(\"/jobs\", { params });\n    return response.data;\n  },\n\n  search: async (params: SearchParams): Promise<JobStatusResponse[]> => {\n    const response = await apiClient.axios.get<JobStatusResponse[]>(\"/search\", { params });\n    return response.data;\n  },\n};\n"],"names":[],"mappings":";;;;AAAA;;AAYO,MAAM,UAAU;IACrB,QAAQ,OAAO;QACb,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ,KAAK,IAAI;QACjC,IAAI,KAAK,IAAI,EAAE;YACb,SAAS,MAAM,CAAC,QAAQ,KAAK,IAAI;QACnC;QAEA,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,IAAI,CAAqB,WAAW,UAAU;YACnF,SAAS;gBACP,gBAAgB;YAClB;QACF;QACA,OAAO,SAAS,IAAI;IACtB;IAEA,SAAS,OAAO,MAAsB;QACpC,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,eAAe,KAAK,WAAW;QAE/C,IAAI,KAAK,MAAM,EAAE;YACf,SAAS,MAAM,CAAC,UAAU,KAAK,MAAM;QACvC;QAEA,IAAI,KAAK,IAAI,EAAE;YACb,SAAS,MAAM,CAAC,QAAQ,KAAK,IAAI;QACnC;QAEA,IAAI,KAAK,IAAI,EAAE;YACb,SAAS,MAAM,CAAC,QAAQ,KAAK,IAAI;QACnC;QAEA,MAAM,UAAkC;YACtC,gBAAgB;QAClB;QAEA,IAAI,YAAY;YACd,QAAQ,aAAa,GAAG;QAC1B;QAEA,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,IAAI,CAAqB,YAAY,UAAU;YACpF;QACF;QACA,OAAO,SAAS,IAAI;IACtB;IAEA,WAAW,OAAO;QAChB,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,GAAG,CAAoB,CAAC,MAAM,EAAE,OAAO;QAC9E,OAAO,SAAS,IAAI;IACtB;IAEA,WAAW,OAAO;QAChB,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,GAAG,CAAoB,CAAC,MAAM,EAAE,MAAM,OAAO,CAAC;QACrF,OAAO,SAAS,IAAI;IACtB;IAEA,UAAU,OAAO;QACf,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,GAAG,CAAmB,CAAC,MAAM,EAAE,MAAM,MAAM,CAAC;QACnF,OAAO,SAAS,IAAI;IACtB;IAEA,eAAe,OAAO,OAAe;QACnC,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,GAAG,CACxC,CAAC,MAAM,EAAE,MAAM,OAAO,EAAE,WAAW,OAAO,CAAC;QAE7C,OAAO,SAAS,IAAI;IACtB;IAEA,eAAe,OAAO,OAAe;QACnC,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,GAAG,CACxC,CAAC,MAAM,EAAE,MAAM,OAAO,EAAE,WAAW,OAAO,CAAC;QAE7C,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,OAAO;QACX,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,GAAG,CAAsB,SAAS;YAAE;QAAO;QAClF,OAAO,SAAS,IAAI;IACtB;IAEA,QAAQ,OAAO;QACb,MAAM,WAAW,MAAM,iIAAS,CAAC,KAAK,CAAC,GAAG,CAAsB,WAAW;YAAE;QAAO;QACpF,OAAO,SAAS,IAAI;IACtB;AACF","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/lib/api/index.ts"],"sourcesContent":["export * from \"./client\";\nexport * from \"./auth\";\nexport * from \"./apikeys\";\nexport * from \"./jobs\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/lib/store/auth.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport type { UserResponse } from \"@/types/api\";\n\ninterface AuthState {\n  user: UserResponse | null;\n  token: string | null;\n  setAuth: (user: UserResponse, token: string) => void;\n  clearAuth: () => void;\n  isAuthenticated: () => boolean;\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set, get) => ({\n      user: null,\n      token: null,\n\n      setAuth: (user, token) => {\n        if (typeof window !== \"undefined\") {\n          localStorage.setItem(\"auth_token\", token);\n        }\n        set({ user, token });\n      },\n\n      clearAuth: () => {\n        if (typeof window !== \"undefined\") {\n          localStorage.removeItem(\"auth_token\");\n          localStorage.removeItem(\"api_key\");\n        }\n        set({ user: null, token: null });\n      },\n\n      isAuthenticated: () => {\n        const state = get();\n        return state.token !== null && state.user !== null;\n      },\n    }),\n    {\n      name: \"auth-storage\",\n    }\n  )\n);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAWO,MAAM,eAAe,IAAA,kJAAM,IAChC,IAAA,wJAAO,EACL,CAAC,KAAK,MAAQ,CAAC;QACb,MAAM;QACN,OAAO;QAEP,SAAS,CAAC,MAAM;YACd;;YAGA,IAAI;gBAAE;gBAAM;YAAM;QACpB;QAEA,WAAW;YACT;;YAIA,IAAI;gBAAE,MAAM;gBAAM,OAAO;YAAK;QAChC;QAEA,iBAAiB;YACf,MAAM,QAAQ;YACd,OAAO,MAAM,KAAK,KAAK,QAAQ,MAAM,IAAI,KAAK;QAChD;IACF,CAAC,GACD;IACE,MAAM;AACR","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,IAAA,kHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,kHAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB;AAGF,MAAM,sBAAQ,mNAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,yKAAmB;QAClB,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,yKAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,kHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":["file:///var/www/doc2md_front/app/api-keys/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport {\n  ArrowLeft,\n  Key,\n  Plus,\n  Copy,\n  Trash2,\n  CheckCircle2,\n} from \"lucide-react\";\nimport { apiKeysApi } from \"@/lib/api\";\nimport { useAuthStore } from \"@/lib/store/auth\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { formatDistanceToNow } from \"date-fns\";\n\nexport default function ApiKeysPage() {\n  const router = useRouter();\n  const queryClient = useQueryClient();\n  const isAuthenticated = useAuthStore((state) => state.token !== null && state.user !== null);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [newKeyName, setNewKeyName] = useState(\"\");\n  const [expiresInDays, setExpiresInDays] = useState<number>(30);\n  const [createdKey, setCreatedKey] = useState<string | null>(null);\n  const [copiedKey, setCopiedKey] = useState(false);\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      router.push(\"/login\");\n    }\n  }, [isAuthenticated, router]);\n\n  const { data: apiKeys, isLoading } = useQuery({\n    queryKey: [\"api-keys\"],\n    queryFn: apiKeysApi.list,\n  });\n\n  const createMutation = useMutation({\n    mutationFn: apiKeysApi.create,\n    onSuccess: (data) => {\n      setCreatedKey(data.api_key);\n      setNewKeyName(\"\");\n      setExpiresInDays(30);\n      setShowCreateForm(false);\n      queryClient.invalidateQueries({ queryKey: [\"api-keys\"] });\n    },\n  });\n\n  const revokeMutation = useMutation({\n    mutationFn: apiKeysApi.revoke,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"api-keys\"] });\n    },\n  });\n\n  const handleCreateKey = () => {\n    createMutation.mutate({\n      name: newKeyName,\n      expires_in_days: expiresInDays || null,\n    });\n  };\n\n  const handleCopyKey = (key: string) => {\n    navigator.clipboard.writeText(key);\n    setCopiedKey(true);\n    setTimeout(() => setCopiedKey(false), 2000);\n  };\n\n  const handleRevokeKey = (keyId: string) => {\n    if (confirm(\"Are you sure you want to revoke this API key? This action cannot be undone.\")) {\n      revokeMutation.mutate(keyId);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-muted\">\n      {/* Header */}\n      <header className=\"border-b bg-background/95 backdrop-blur\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <Button variant=\"ghost\" onClick={() => router.push(\"/dashboard\")}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Dashboard\n          </Button>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"container mx-auto px-4 py-12\">\n        <div className=\"max-w-4xl mx-auto space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold flex items-center gap-2\">\n                <Key className=\"h-8 w-8\" />\n                API Keys\n              </h1>\n              <p className=\"text-muted-foreground mt-1\">\n                Manage API keys for programmatic access\n              </p>\n            </div>\n            <Button onClick={() => setShowCreateForm(!showCreateForm)}>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create API Key\n            </Button>\n          </div>\n\n          {/* Created Key Alert */}\n          {createdKey && (\n            <Card className=\"border-green-500/50 bg-green-500/5\">\n              <CardHeader>\n                <CardTitle className=\"text-green-600 dark:text-green-400 flex items-center gap-2\">\n                  <CheckCircle2 className=\"h-5 w-5\" />\n                  API Key Created Successfully\n                </CardTitle>\n                <CardDescription>\n                  Make sure to copy your API key now. You won&apos;t be able to see it again!\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex gap-2\">\n                  <Input\n                    value={createdKey}\n                    readOnly\n                    className=\"font-mono text-sm\"\n                  />\n                  <Button\n                    onClick={() => handleCopyKey(createdKey)}\n                    variant=\"outline\"\n                  >\n                    {copiedKey ? (\n                      <>\n                        <CheckCircle2 className=\"h-4 w-4 mr-2\" />\n                        Copied\n                      </>\n                    ) : (\n                      <>\n                        <Copy className=\"h-4 w-4 mr-2\" />\n                        Copy\n                      </>\n                    )}\n                  </Button>\n                </div>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCreatedKey(null)}\n                >\n                  I&apos;ve saved my API key\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Create Form */}\n          {showCreateForm && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Create New API Key</CardTitle>\n                <CardDescription>\n                  API keys are used for programmatic access to the API\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"keyName\">Key Name</Label>\n                  <Input\n                    id=\"keyName\"\n                    placeholder=\"e.g., Production Server\"\n                    value={newKeyName}\n                    onChange={(e) => setNewKeyName(e.target.value)}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"expires\">Expires In (days)</Label>\n                  <Input\n                    id=\"expires\"\n                    type=\"number\"\n                    min={1}\n                    max={365}\n                    value={expiresInDays}\n                    onChange={(e) => setExpiresInDays(parseInt(e.target.value))}\n                  />\n                  <p className=\"text-xs text-muted-foreground\">\n                    Leave at 30 days or set to 365 for long-term keys\n                  </p>\n                </div>\n                <div className=\"flex gap-2\">\n                  <Button\n                    onClick={handleCreateKey}\n                    disabled={!newKeyName || createMutation.isPending}\n                  >\n                    {createMutation.isPending ? \"Creating...\" : \"Create Key\"}\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setShowCreateForm(false)}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* API Keys List */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Your API Keys</CardTitle>\n              <CardDescription>\n                {apiKeys?.length || 0} active API key(s)\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {isLoading ? (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  Loading...\n                </div>\n              ) : apiKeys && apiKeys.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {apiKeys.map((key) => (\n                    <div\n                      key={key.id}\n                      className=\"flex items-center justify-between p-4 border rounded-lg\"\n                    >\n                      <div className=\"flex-1\">\n                        <p className=\"font-medium\">{key.name}</p>\n                        <div className=\"flex gap-4 mt-1 text-sm text-muted-foreground\">\n                          <span>\n                            Created {formatDistanceToNow(new Date(key.created_at), { addSuffix: true })}\n                          </span>\n                          {key.last_used_at && (\n                            <span>\n                              Last used {formatDistanceToNow(new Date(key.last_used_at), { addSuffix: true })}\n                            </span>\n                          )}\n                          {key.expires_at && (\n                            <span>\n                              Expires {formatDistanceToNow(new Date(key.expires_at), { addSuffix: true })}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => handleRevokeKey(key.id)}\n                        disabled={revokeMutation.isPending}\n                        className=\"text-destructive hover:text-destructive\"\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  <Key className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                  <p>No API keys yet</p>\n                  <p className=\"text-sm mt-2\">\n                    Create one to start using the API programmatically\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Usage Info */}\n          <Card>\n            <CardHeader>\n              <CardTitle>How to Use API Keys</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4 text-sm\">\n              <div>\n                <p className=\"font-medium mb-2\">Include the API key in your requests:</p>\n                <pre className=\"bg-muted p-4 rounded-lg overflow-x-auto\">\n                  {`curl -X POST http://localhost:8080/upload \\\\\n  -H \"X-API-Key: doc2md_sk_...\" \\\\\n  -F \"file=@document.pdf\"`}\n                </pre>\n              </div>\n              <div className=\"text-muted-foreground\">\n                <p>• API keys provide the same access as your user account</p>\n                <p>• Keep your API keys secret and never commit them to version control</p>\n                <p>• Revoke any keys that may have been compromised</p>\n                <p>• Use different keys for different environments (dev, staging, prod)</p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}