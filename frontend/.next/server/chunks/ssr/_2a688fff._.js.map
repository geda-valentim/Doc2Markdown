{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/lib/api.ts"],"sourcesContent":["import type {\n  UserCreate,\n  UserLogin,\n  UserResponse,\n  Token,\n  APIKeyCreate,\n  APIKeyResponse,\n  APIKeyInfo,\n  JobCreatedResponse,\n  JobStatusResponse,\n  JobResultResponse,\n  JobPagesResponse,\n  ConvertRequest,\n  UploadRequest,\n  JobsListParams,\n  SearchParams,\n} from \"@/types/api\";\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8080\";\n\nfunction getAuthToken(): string | null {\n  if (typeof window === \"undefined\") return null;\n  return localStorage.getItem(\"auth_token\");\n}\n\nfunction getHeaders(includeAuth = false): HeadersInit {\n  const headers: HeadersInit = {};\n\n  if (includeAuth) {\n    const token = getAuthToken();\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n  }\n\n  return headers;\n}\n\n// Auth API\nexport const authApi = {\n  async register(data: UserCreate): Promise<{ message: string }> {\n    const response = await fetch(`${API_URL}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ detail: \"Registration failed\" }));\n      throw { response: { data: error } };\n    }\n\n    return response.json();\n  },\n\n  async login(data: UserLogin): Promise<Token> {\n    const formData = new URLSearchParams();\n    formData.append(\"username\", data.username);\n    formData.append(\"password\", data.password);\n\n    const response = await fetch(`${API_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: formData,\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ detail: \"Login failed\" }));\n      throw { response: { data: error } };\n    }\n\n    return response.json();\n  },\n\n  async me(): Promise<UserResponse> {\n    const response = await fetch(`${API_URL}/auth/me`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch user profile\");\n    }\n\n    return response.json();\n  },\n};\n\n// Jobs API\nexport const jobsApi = {\n  async convert(request: ConvertRequest): Promise<JobCreatedResponse> {\n    const formData = new FormData();\n    formData.append(\"source_type\", request.source_type);\n\n    if (request.file) {\n      formData.append(\"file\", request.file);\n    }\n\n    if (request.source) {\n      formData.append(\"source\", request.source);\n    }\n\n    if (request.name) {\n      formData.append(\"name\", request.name);\n    }\n\n    if (request.authToken) {\n      formData.append(\"auth_token\", request.authToken);\n    }\n\n    const response = await fetch(`${API_URL}/convert`, {\n      method: \"POST\",\n      headers: getHeaders(true),\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Conversion failed: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async upload(request: UploadRequest): Promise<JobCreatedResponse> {\n    const formData = new FormData();\n    formData.append(\"file\", request.file);\n\n    if (request.name) {\n      formData.append(\"name\", request.name);\n    }\n\n    const response = await fetch(`${API_URL}/upload`, {\n      method: \"POST\",\n      headers: getHeaders(true),\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Upload failed: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async getStatus(jobId: string): Promise<JobStatusResponse> {\n    const response = await fetch(`${API_URL}/jobs/${jobId}`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch job status: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async getResult(jobId: string): Promise<JobResultResponse> {\n    const response = await fetch(`${API_URL}/jobs/${jobId}/result`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch job result: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async getPages(jobId: string): Promise<JobPagesResponse> {\n    const response = await fetch(`${API_URL}/jobs/${jobId}/pages`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch job pages: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async list(params?: JobsListParams): Promise<JobStatusResponse[]> {\n    const searchParams = new URLSearchParams();\n    if (params?.limit) searchParams.set(\"limit\", params.limit.toString());\n    if (params?.offset) searchParams.set(\"offset\", params.offset.toString());\n    if (params?.status) searchParams.set(\"status\", params.status);\n    if (params?.job_type) searchParams.set(\"job_type\", params.job_type);\n\n    const url = `${API_URL}/jobs${searchParams.toString() ? `?${searchParams}` : \"\"}`;\n    const response = await fetch(url, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch jobs: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async search(params: SearchParams): Promise<JobStatusResponse[]> {\n    const searchParams = new URLSearchParams();\n    searchParams.set(\"query\", params.query);\n    if (params.limit) searchParams.set(\"limit\", params.limit.toString());\n\n    const response = await fetch(`${API_URL}/jobs/search?${searchParams}`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Search failed: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async cancel(jobId: string): Promise<{ message: string }> {\n    const response = await fetch(`${API_URL}/jobs/${jobId}/cancel`, {\n      method: \"POST\",\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to cancel job: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async getPageResultByNumber(jobId: string, pageNumber: number): Promise<JobResultResponse> {\n    // First get all pages to find the job_id for this page number\n    const pagesResponse = await this.getPages(jobId);\n    const page = pagesResponse.pages.find((p) => p.page_number === pageNumber);\n\n    if (!page) {\n      throw new Error(`Page ${pageNumber} not found`);\n    }\n\n    // Then get the result for that specific page job\n    return this.getResult(page.job_id);\n  },\n\n  async delete(jobId: string): Promise<{ message: string }> {\n    const response = await fetch(`${API_URL}/jobs/${jobId}`, {\n      method: \"DELETE\",\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to delete job: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async retryPage(pageJobId: string): Promise<string> {\n    const response = await fetch(`${API_URL}/jobs/${pageJobId}/retry`, {\n      method: \"POST\",\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to retry page: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data.new_job_id || data.job_id;\n  },\n};\n\n// API Keys API\nexport const apiKeysApi = {\n  async list(): Promise<APIKeyInfo[]> {\n    const response = await fetch(`${API_URL}/apikeys`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to list API keys: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data.api_keys || [];\n  },\n\n  async create(request: APIKeyCreate): Promise<APIKeyResponse> {\n    const response = await fetch(`${API_URL}/apikeys`, {\n      method: \"POST\",\n      headers: {\n        ...getHeaders(true),\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(request),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to create API key: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async revoke(keyId: string): Promise<{ message: string }> {\n    const response = await fetch(`${API_URL}/apikeys/${keyId}`, {\n      method: \"DELETE\",\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to revoke API key: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,IAAA,kHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,kHAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB;AAGF,MAAM,sBAAQ,mNAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,yKAAmB;QAClB,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,yKAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,kHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/app/register/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { authApi } from \"@/lib/api\";\nimport { formatApiError } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\n\nexport default function RegisterPage() {\n  const router = useRouter();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  const registerMutation = useMutation({\n    mutationFn: authApi.register,\n    onSuccess: () => {\n      setSuccess(true);\n      setTimeout(() => {\n        router.push(\"/login\");\n      }, 2000);\n    },\n    onError: (error: any) => {\n      setError(formatApiError(error, \"Registration failed. Please try again.\"));\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    registerMutation.mutate({ email, username, password });\n  };\n\n  if (success) {\n    return (\n      <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-background to-muted p-4\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader>\n            <CardTitle className=\"text-center text-2xl\">Success!</CardTitle>\n            <CardDescription className=\"text-center\">\n              Your account has been created. Redirecting to login...\n            </CardDescription>\n          </CardHeader>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-background to-muted p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"space-y-1\">\n          <CardTitle className=\"text-3xl font-bold text-center\">\n            Create an Account\n          </CardTitle>\n          <CardDescription className=\"text-center\">\n            Start converting your documents to Markdown\n          </CardDescription>\n        </CardHeader>\n        <form onSubmit={handleSubmit}>\n          <CardContent className=\"space-y-4\">\n            {error && (\n              <div className=\"rounded-md bg-destructive/10 border border-destructive/20 p-3 text-sm text-destructive\">\n                {error}\n              </div>\n            )}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"username\">Username</Label>\n              <Input\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"Choose a username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                required\n                minLength={3}\n                maxLength={50}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"Create a password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                minLength={6}\n              />\n              <p className=\"text-xs text-muted-foreground\">\n                Password must be at least 6 characters long\n              </p>\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex flex-col space-y-4\">\n            <Button\n              type=\"submit\"\n              className=\"w-full\"\n              disabled={registerMutation.isPending}\n            >\n              {registerMutation.isPending ? \"Creating account...\" : \"Sign Up\"}\n            </Button>\n            <p className=\"text-sm text-center text-muted-foreground\">\n              Already have an account?{\" \"}\n              <Link\n                href=\"/login\"\n                className=\"text-primary hover:underline font-medium\"\n              >\n                Sign in\n              </Link>\n            </p>\n          </CardFooter>\n        </form>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}