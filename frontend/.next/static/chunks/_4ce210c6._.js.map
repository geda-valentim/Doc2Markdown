{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/lib/api.ts"],"sourcesContent":["import type {\n  UserCreate,\n  UserLogin,\n  UserResponse,\n  Token,\n  APIKeyCreate,\n  APIKeyResponse,\n  APIKeyInfo,\n  JobCreatedResponse,\n  JobStatusResponse,\n  JobResultResponse,\n  JobPagesResponse,\n  ConvertRequest,\n  UploadRequest,\n  JobsListParams,\n  SearchParams,\n} from \"@/types/api\";\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8080\";\n\nfunction getAuthToken(): string | null {\n  if (typeof window === \"undefined\") return null;\n  return localStorage.getItem(\"auth_token\");\n}\n\nfunction getHeaders(includeAuth = false): HeadersInit {\n  const headers: HeadersInit = {};\n\n  if (includeAuth) {\n    const token = getAuthToken();\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n  }\n\n  return headers;\n}\n\n// Auth API\nexport const authApi = {\n  async register(data: UserCreate): Promise<{ message: string }> {\n    const response = await fetch(`${API_URL}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ detail: \"Registration failed\" }));\n      throw { response: { data: error } };\n    }\n\n    return response.json();\n  },\n\n  async login(data: UserLogin): Promise<Token> {\n    const formData = new URLSearchParams();\n    formData.append(\"username\", data.username);\n    formData.append(\"password\", data.password);\n\n    const response = await fetch(`${API_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: formData,\n    });\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ detail: \"Login failed\" }));\n      throw { response: { data: error } };\n    }\n\n    return response.json();\n  },\n\n  async me(): Promise<UserResponse> {\n    const response = await fetch(`${API_URL}/auth/me`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch user profile\");\n    }\n\n    return response.json();\n  },\n};\n\n// Jobs API\nexport const jobsApi = {\n  async convert(request: ConvertRequest): Promise<JobCreatedResponse> {\n    const formData = new FormData();\n    formData.append(\"source_type\", request.source_type);\n\n    if (request.file) {\n      formData.append(\"file\", request.file);\n    }\n\n    if (request.source) {\n      formData.append(\"source\", request.source);\n    }\n\n    if (request.name) {\n      formData.append(\"name\", request.name);\n    }\n\n    if (request.authToken) {\n      formData.append(\"auth_token\", request.authToken);\n    }\n\n    const response = await fetch(`${API_URL}/convert`, {\n      method: \"POST\",\n      headers: getHeaders(true),\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Conversion failed: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async upload(request: UploadRequest): Promise<JobCreatedResponse> {\n    const formData = new FormData();\n    formData.append(\"file\", request.file);\n\n    if (request.name) {\n      formData.append(\"name\", request.name);\n    }\n\n    const response = await fetch(`${API_URL}/upload`, {\n      method: \"POST\",\n      headers: getHeaders(true),\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Upload failed: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async getStatus(jobId: string): Promise<JobStatusResponse> {\n    const response = await fetch(`${API_URL}/jobs/${jobId}`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch job status: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async getResult(jobId: string): Promise<JobResultResponse> {\n    const response = await fetch(`${API_URL}/jobs/${jobId}/result`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch job result: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async getPages(jobId: string): Promise<JobPagesResponse> {\n    const response = await fetch(`${API_URL}/jobs/${jobId}/pages`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch job pages: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async list(params?: JobsListParams): Promise<JobStatusResponse[]> {\n    const searchParams = new URLSearchParams();\n    if (params?.limit) searchParams.set(\"limit\", params.limit.toString());\n    if (params?.offset) searchParams.set(\"offset\", params.offset.toString());\n    if (params?.status) searchParams.set(\"status\", params.status);\n    if (params?.job_type) searchParams.set(\"job_type\", params.job_type);\n\n    const url = `${API_URL}/jobs${searchParams.toString() ? `?${searchParams}` : \"\"}`;\n    const response = await fetch(url, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch jobs: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async search(params: SearchParams): Promise<JobStatusResponse[]> {\n    const searchParams = new URLSearchParams();\n    searchParams.set(\"query\", params.query);\n    if (params.limit) searchParams.set(\"limit\", params.limit.toString());\n\n    const response = await fetch(`${API_URL}/jobs/search?${searchParams}`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Search failed: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async cancel(jobId: string): Promise<{ message: string }> {\n    const response = await fetch(`${API_URL}/jobs/${jobId}/cancel`, {\n      method: \"POST\",\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to cancel job: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async getPageResultByNumber(jobId: string, pageNumber: number): Promise<JobResultResponse> {\n    // First get all pages to find the job_id for this page number\n    const pagesResponse = await this.getPages(jobId);\n    const page = pagesResponse.pages.find((p) => p.page_number === pageNumber);\n\n    if (!page) {\n      throw new Error(`Page ${pageNumber} not found`);\n    }\n\n    // Then get the result for that specific page job\n    return this.getResult(page.job_id);\n  },\n\n  async delete(jobId: string): Promise<{ message: string }> {\n    const response = await fetch(`${API_URL}/jobs/${jobId}`, {\n      method: \"DELETE\",\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to delete job: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async retryPage(pageJobId: string): Promise<string> {\n    const response = await fetch(`${API_URL}/jobs/${pageJobId}/retry`, {\n      method: \"POST\",\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to retry page: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data.new_job_id || data.job_id;\n  },\n};\n\n// API Keys API\nexport const apiKeysApi = {\n  async list(): Promise<APIKeyInfo[]> {\n    const response = await fetch(`${API_URL}/api-keys`, {\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to list API keys: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data.api_keys || [];\n  },\n\n  async create(request: APIKeyCreate): Promise<APIKeyResponse> {\n    const response = await fetch(`${API_URL}/api-keys`, {\n      method: \"POST\",\n      headers: {\n        ...getHeaders(true),\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(request),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to create API key: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  async revoke(keyId: string): Promise<{ message: string }> {\n    const response = await fetch(`${API_URL}/api-keys/${keyId}`, {\n      method: \"DELETE\",\n      headers: getHeaders(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to revoke API key: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/lib/store/auth.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { persist, createJSONStorage } from \"zustand/middleware\";\nimport type { UserResponse } from \"@/types/api\";\n\ninterface AuthState {\n  user: UserResponse | null;\n  token: string | null;\n  _hasHydrated: boolean;\n  setAuth: (user: UserResponse, token: string) => void;\n  clearAuth: () => void;\n  setHasHydrated: (state: boolean) => void;\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set) => ({\n      user: null,\n      token: null,\n      _hasHydrated: false,\n      setAuth: (user, token) => set({ user, token }),\n      clearAuth: () => set({ user: null, token: null }),\n      setHasHydrated: (state) => set({ _hasHydrated: state }),\n    }),\n    {\n      name: \"auth-storage\",\n      storage: createJSONStorage(() => localStorage),\n      onRehydrateStorage: () => (state) => {\n        state?.setHasHydrated(true);\n      },\n    }\n  )\n);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAYO,MAAM,eAAe,IAAA,qJAAM,IAChC,IAAA,2JAAO,EACL,CAAC,MAAQ,CAAC;QACR,MAAM;QACN,OAAO;QACP,cAAc;QACd,SAAS,CAAC,MAAM,QAAU,IAAI;gBAAE;gBAAM;YAAM;QAC5C,WAAW,IAAM,IAAI;gBAAE,MAAM;gBAAM,OAAO;YAAK;QAC/C,gBAAgB,CAAC,QAAU,IAAI;gBAAE,cAAc;YAAM;IACvD,CAAC,GACD;IACE,MAAM;IACN,SAAS,IAAA,qKAAiB,EAAC,IAAM;IACjC,oBAAoB,IAAM,CAAC;YACzB,kBAAA,4BAAA,MAAO,cAAc,CAAC;QACxB;AACF","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,2KAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,IAAA,qHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,qHAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB;AAGF,MAAM,sBAAQ,2KAAgB,MAI5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,4KAAmB;QAClB,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG,4KAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,qHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file:///home/ingestify-to-ai/frontend/app/api-keys/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport {\n  ArrowLeft,\n  Key,\n  Plus,\n  Copy,\n  Trash2,\n  CheckCircle2,\n} from \"lucide-react\";\nimport { apiKeysApi } from \"@/lib/api\";\nimport { useAuthStore } from \"@/lib/store/auth\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { formatDistanceToNow } from \"date-fns\";\n\nexport default function ApiKeysPage() {\n  const router = useRouter();\n  const queryClient = useQueryClient();\n  const isAuthenticated = useAuthStore((state) => state.token !== null && state.user !== null);\n  const hasHydrated = useAuthStore((state) => state._hasHydrated);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [newKeyName, setNewKeyName] = useState(\"\");\n  const [expiresInDays, setExpiresInDays] = useState<number>(30);\n  const [createdKey, setCreatedKey] = useState<string | null>(null);\n  const [copiedKey, setCopiedKey] = useState(false);\n\n  useEffect(() => {\n    if (hasHydrated && !isAuthenticated) {\n      router.push(\"/login\");\n    }\n  }, [isAuthenticated, hasHydrated, router]);\n\n  const { data: apiKeys, isLoading } = useQuery({\n    queryKey: [\"api-keys\"],\n    queryFn: apiKeysApi.list,\n  });\n\n  const createMutation = useMutation({\n    mutationFn: apiKeysApi.create,\n    onSuccess: (data) => {\n      setCreatedKey(data.api_key);\n      setNewKeyName(\"\");\n      setExpiresInDays(30);\n      setShowCreateForm(false);\n      queryClient.invalidateQueries({ queryKey: [\"api-keys\"] });\n    },\n  });\n\n  const revokeMutation = useMutation({\n    mutationFn: apiKeysApi.revoke,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"api-keys\"] });\n    },\n  });\n\n  const handleCreateKey = () => {\n    createMutation.mutate({\n      name: newKeyName,\n      expires_in_days: expiresInDays || null,\n    });\n  };\n\n  const handleCopyKey = (key: string) => {\n    navigator.clipboard.writeText(key);\n    setCopiedKey(true);\n    setTimeout(() => setCopiedKey(false), 2000);\n  };\n\n  const handleRevokeKey = (keyId: string) => {\n    if (confirm(\"Are you sure you want to revoke this API key? This action cannot be undone.\")) {\n      revokeMutation.mutate(keyId);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-muted\">\n      {/* Header */}\n      <header className=\"border-b bg-background/95 backdrop-blur\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <Button variant=\"ghost\" onClick={() => router.push(\"/dashboard\")}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Dashboard\n          </Button>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"container mx-auto px-4 py-12\">\n        <div className=\"max-w-4xl mx-auto space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold flex items-center gap-2\">\n                <Key className=\"h-8 w-8\" />\n                API Keys\n              </h1>\n              <p className=\"text-muted-foreground mt-1\">\n                Manage API keys for programmatic access\n              </p>\n            </div>\n            <Button onClick={() => setShowCreateForm(!showCreateForm)}>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create API Key\n            </Button>\n          </div>\n\n          {/* Created Key Alert */}\n          {createdKey && (\n            <Card className=\"border-green-500/50 bg-green-500/5\">\n              <CardHeader>\n                <CardTitle className=\"text-green-600 dark:text-green-400 flex items-center gap-2\">\n                  <CheckCircle2 className=\"h-5 w-5\" />\n                  API Key Created Successfully\n                </CardTitle>\n                <CardDescription>\n                  Make sure to copy your API key now. You won&apos;t be able to see it again!\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex gap-2\">\n                  <Input\n                    value={createdKey}\n                    readOnly\n                    className=\"font-mono text-sm\"\n                  />\n                  <Button\n                    onClick={() => handleCopyKey(createdKey)}\n                    variant=\"outline\"\n                  >\n                    {copiedKey ? (\n                      <>\n                        <CheckCircle2 className=\"h-4 w-4 mr-2\" />\n                        Copied\n                      </>\n                    ) : (\n                      <>\n                        <Copy className=\"h-4 w-4 mr-2\" />\n                        Copy\n                      </>\n                    )}\n                  </Button>\n                </div>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCreatedKey(null)}\n                >\n                  I&apos;ve saved my API key\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Create Form */}\n          {showCreateForm && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Create New API Key</CardTitle>\n                <CardDescription>\n                  API keys are used for programmatic access to the API\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"keyName\">Key Name</Label>\n                  <Input\n                    id=\"keyName\"\n                    placeholder=\"e.g., Production Server\"\n                    value={newKeyName}\n                    onChange={(e) => setNewKeyName(e.target.value)}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"expires\">Expires In (days)</Label>\n                  <Input\n                    id=\"expires\"\n                    type=\"number\"\n                    min={1}\n                    max={365}\n                    value={expiresInDays}\n                    onChange={(e) => setExpiresInDays(parseInt(e.target.value))}\n                  />\n                  <p className=\"text-xs text-muted-foreground\">\n                    Leave at 30 days or set to 365 for long-term keys\n                  </p>\n                </div>\n                <div className=\"flex gap-2\">\n                  <Button\n                    onClick={handleCreateKey}\n                    disabled={!newKeyName || createMutation.isPending}\n                  >\n                    {createMutation.isPending ? \"Creating...\" : \"Create Key\"}\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setShowCreateForm(false)}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* API Keys List */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Your API Keys</CardTitle>\n              <CardDescription>\n                {apiKeys?.length || 0} active API key(s)\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {isLoading ? (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  Loading...\n                </div>\n              ) : apiKeys && apiKeys.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {apiKeys.map((key) => (\n                    <div\n                      key={key.id}\n                      className=\"flex items-center justify-between p-4 border rounded-lg\"\n                    >\n                      <div className=\"flex-1\">\n                        <p className=\"font-medium\">{key.name}</p>\n                        <div className=\"flex gap-4 mt-1 text-sm text-muted-foreground\">\n                          <span>\n                            Created {formatDistanceToNow(new Date(key.created_at), { addSuffix: true })}\n                          </span>\n                          {key.last_used_at && (\n                            <span>\n                              Last used {formatDistanceToNow(new Date(key.last_used_at), { addSuffix: true })}\n                            </span>\n                          )}\n                          {key.expires_at && (\n                            <span>\n                              Expires {formatDistanceToNow(new Date(key.expires_at), { addSuffix: true })}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => handleRevokeKey(key.id)}\n                        disabled={revokeMutation.isPending}\n                        className=\"text-destructive hover:text-destructive\"\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  <Key className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                  <p>No API keys yet</p>\n                  <p className=\"text-sm mt-2\">\n                    Create one to start using the API programmatically\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Usage Info */}\n          <Card>\n            <CardHeader>\n              <CardTitle>How to Use API Keys</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4 text-sm\">\n              <div>\n                <p className=\"font-medium mb-2\">Include the API key in your requests:</p>\n                <pre className=\"bg-muted p-4 rounded-lg overflow-x-auto\">\n                  {`curl -X POST http://localhost:8080/upload \\\\\n  -H \"X-API-Key: doc2md_sk_...\" \\\\\n  -F \"file=@document.pdf\"`}\n                </pre>\n              </div>\n              <div className=\"text-muted-foreground\">\n                <p>• API keys provide the same access as your user account</p>\n                <p>• Keep your API keys secret and never commit them to version control</p>\n                <p>• Revoke any keys that may have been compromised</p>\n                <p>• Use different keys for different environments (dev, staging, prod)</p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}