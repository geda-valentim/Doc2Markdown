services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: ingestify-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx1g"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ingestify-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: ingestify-api
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - CELERY_TASK_DEFAULT_QUEUE=ingestify
      - CELERY_WORKER_NAME=ingestify-worker
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - MAX_FILE_SIZE_MB=50
      - CONVERSION_TIMEOUT_SECONDS=600
      - TEMP_STORAGE_PATH=/tmp/ingestify
      - RESULT_TTL_SECONDS=14400
      - DATABASE_URL=${DATABASE_URL:-mysql+pymysql://root:root@host.docker.internal:3306/ingestify}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL:-http://host.docker.internal:9200}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./tmp:/tmp/ingestify
      - ./backend/api:/app/api
      - ./backend/shared:/app/shared
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - CELERY_TASK_DEFAULT_QUEUE=ingestify
      - CELERY_WORKER_NAME=ingestify-worker
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - MAX_FILE_SIZE_MB=50
      - CONVERSION_TIMEOUT_SECONDS=600
      - TEMP_STORAGE_PATH=/tmp/ingestify
      - RESULT_TTL_SECONDS=14400
      - DATABASE_URL=${DATABASE_URL:-mysql+pymysql://root:root@host.docker.internal:3306/ingestify}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL:-http://host.docker.internal:9200}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./tmp:/tmp/ingestify
      - ./backend/workers:/app/workers
      - ./backend/shared:/app/shared
    deploy:
      replicas: 5
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: ingestify-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    depends_on:
      - api
    restart: unless-stopped

volumes:
  elasticsearch_data:
  redis_data:
